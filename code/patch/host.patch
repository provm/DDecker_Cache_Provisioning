diff -u5 -rNX exclude-linux linux-4.1.3/include/linux/mm.h linux-4.1.3.changed/include/linux/mm.h
--- linux-4.1.3/include/linux/mm.h	2015-07-21 22:40:33.000000000 +0530
+++ linux-4.1.3.changed/include/linux/mm.h	2017-06-27 19:00:14.426947680 +0530
@@ -55,10 +55,14 @@
 
 #ifndef __pa_symbol
 #define __pa_symbol(x)  __pa(RELOC_HIDE((unsigned long)(x), 0))
 #endif
 
+#ifndef page_to_virt
+#define page_to_virt(x)	__va(PFN_PHYS(page_to_pfn(x)))
+#endif
+
 /*
  * To prevent common memory management code establishing
  * a zero page mapping on a read fault.
  * This macro should be defined within <asm/pgtable.h>.
  * s390 does this to prevent multiplexing of hardware bits
diff -u5 -rNX exclude-linux linux-4.1.3/include/linux/tmem_interface.h linux-4.1.3.changed/include/linux/tmem_interface.h
--- linux-4.1.3/include/linux/tmem_interface.h	1970-01-01 05:30:00.000000000 +0530
+++ linux-4.1.3.changed/include/linux/tmem_interface.h	2017-06-12 13:45:56.791742522 +0530
@@ -0,0 +1,58 @@
+#ifndef __TMEM_INTERFACE_H_
+  #define __TMEM_INTERFACE_H_
+
+
+#define KVM_TMEM_HCALL 10
+
+#define TMEM_CONTROL               0
+#define TMEM_NEW_POOL              1
+#define TMEM_DESTROY_POOL          2
+#define TMEM_NEW_PAGE              3
+#define TMEM_PUT_PAGE              4
+#define TMEM_GET_PAGE              5
+#define TMEM_FLUSH_PAGE            6
+#define TMEM_FLUSH_OBJECT          7
+#define TMEM_READ                  8
+#define TMEM_WRITE                 9
+#define TMEM_XCHG                 10
+
+#define TMEM_NEW_CGPOOL           11 
+#define TMEM_DESTROY_CGPOOL       12
+#define TMEM_SET_POOL_WEIGHT      13
+#define TMEM_GET_POOL_STATS	  14
+
+/* Bits for HYPERVISOR_tmem_op(TMEM_NEW_POOL) */
+#define TMEM_POOL_PERSIST          1
+#define TMEM_POOL_SHARED           2
+#define TMEM_POOL_PAGESIZE_SHIFT   4
+#define TMEM_VERSION_SHIFT        24
+
+struct kvm_tmem_op {
+        uint32_t cmd;
+        int32_t pool_id;
+        union {
+                struct {  /* for cmd == TMEM_NEW_POOL */
+                        uint64_t uuid[2];
+                        uint32_t flags;
+                } new;
+                struct{  /* for cmd == TMEM_NEW_CGPOOL */
+                         uint32_t id;
+                         uint32_t flags;
+                         uint32_t weight;
+                }cnew;
+                struct {
+                        uint64_t oid[3];
+                        uint32_t index;
+                        uint32_t tmem_offset;
+                        uint32_t pfn_offset;
+                        uint32_t len;
+                        unsigned long gmfn; /* guest machine page frame */
+                } gen;
+        } u;
+};
+
+
+extern int (*handle_tmem_hcall) (struct kvm_tmem_op *op, struct kvm_vcpu *vcpu);
+extern int (*handle_vm_destroy) (struct kvm *kvm);
+
+#endif
Binary files linux-4.1.3/kernel/x509_certificate_list and linux-4.1.3.changed/kernel/x509_certificate_list differ
diff -u5 -rNX exclude-linux linux-4.1.3/kernel/.x509.list linux-4.1.3.changed/kernel/.x509.list
--- linux-4.1.3/kernel/.x509.list	2016-08-25 15:46:46.843098812 +0530
+++ linux-4.1.3.changed/kernel/.x509.list	2016-09-09 10:47:22.957912753 +0530
@@ -1 +1 @@
-./signing_key.x509
+signing_key.x509
diff -u5 -rNX exclude-linux linux-4.1.3/Makefile linux-4.1.3.changed/Makefile
--- linux-4.1.3/Makefile	2015-07-21 22:40:33.000000000 +0530
+++ linux-4.1.3.changed/Makefile	2016-09-09 10:03:29.629866895 +0530
@@ -1,8 +1,8 @@
 VERSION = 4
 PATCHLEVEL = 1
-SUBLEVEL = 3
+SUBLEVEL = 5
 EXTRAVERSION =
 NAME = Series 4800
 
 # *DOCUMENTATION*
 # To see a list of typical targets execute "make help"
Binary files linux-4.1.3/signing_key.x509 and linux-4.1.3.changed/signing_key.x509 differ
